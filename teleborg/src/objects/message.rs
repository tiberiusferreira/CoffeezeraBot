use objects::{User, Chat, MessageEntity, Contact, Document, Audio, Sticker, Video, PhotoSize,
              Voice, Location, Venue, Game};

/// Represents a Telegram message.
#[derive(Clone, Deserialize, Debug)]
pub struct Message {
    pub message_id: i64,
    pub from: Option<User>,
    pub date: i64,
    pub chat: Chat,
    pub forward_from: Option<User>,
    pub forward_from_chat: Option<Chat>,
    pub forward_from_message_id: Option<i64>,
    pub forward_date: Option<i64>,
    pub reply_to_message: Option<Box<Message>>,
    pub edit_date: Option<i64>,
    pub text: Option<String>,
//    pub entities: Option<Vec<MessageEntity>>,
//    pub audio: Option<Audio>,
//    pub document: Option<Document>,
//    pub game: Option<Game>,
//    pub photo: Option<Vec<PhotoSize>>,
//    pub sticker: Option<Sticker>,
//    pub video: Option<Video>,
//    pub voice: Option<Voice>,
//    pub caption: Option<String>,
//    pub contact: Option<Contact>,
//    pub location: Option<Location>,
//    pub venue: Option<Venue>,
//    pub new_chat_member: Option<User>,
//    pub left_chat_member: Option<User>,
//    pub new_chat_title: Option<String>,
    //pub new_chat_photo: Option<String>,
    //pub delete_chat_photo: Option<bool>,
    //pub group_chat_created: Option<bool>,
    //pub supergroup_chat_created: Option<bool>,
    //pub channel_chat_created: Option<bool>,
    //pub migrate_to_chat_id: Option<i64>,
    //pub migrate_from_chat_id: Option<i64>,
    //pub pinned_message: Option<Box<Message>>,
}
